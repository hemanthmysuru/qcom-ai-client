@import "../../styles/main.scss";
@import "../../styles/mixins";

$camBgSize: 48px;
$camCoverageSize: 168px;

.camera-view {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 2;

    .coverage {
        width: $camCoverageSize;
        height: $camCoverageSize;
        // border: 1px solid black;
        border-radius: 50%;
        @include flex-row();
        position: relative;
        transition: transform 0.5s ease-in-out;

        .camera {
            width: $camBgSize;
            height: $camBgSize;
            background-color: #38bcdb;
            border-radius: 50%;
            @include flex-row();

            // Rotate based on the CSS variable for cameraAngle with a smooth transition
            transform: rotate(var(--camera-angle, 0deg)); // Default to 0deg if variable is not set
            transition: transform 0.5s ease-in-out;
            box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.25);
            z-index: 1;
        }

        &::after {
            content: "";
            position: absolute;
            top: 50%;
            left: 50%;
            width: 100%;
            height: 100%;
            clip-path: circle(50%);
            transform: translate(-50%, -50%);
            transform-origin: center;
            transition: transform 0.5s ease-in-out;

            background: conic-gradient(
                from calc((var(--camera-angle, 0deg) - var(--field-of-view-angle, 90deg) / 2) - 90deg),
                rgba(56, 188, 219, 0.5) 0deg,
                rgba(56, 188, 219, 0.5) var(--field-of-view-angle, 90deg),
                transparent var(--field-of-view-angle, 90deg),
                transparent 360deg
            );
        }
    }

    .pin {
        position: absolute;
        top: -12px;
        z-index: 2;
    }
}
